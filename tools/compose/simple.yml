version: "3.8"

# In this Docker Compose example, it assumes that you maintain a reverse proxy externally (or chose not to).
# The only two exposed ports here are from minio (:9000) and the app itself (:3000).
# If these ports are changed, ensure that the env vars passed to the app are also changed accordingly.

services:
  # Database (Postgres)
  #  postgres:
  #    image: postgres:16-alpine
  #    restart: unless-stopped
  #    volumes:
  #      - postgres_data:/var/lib/postgresql/data
  #    environment:
  #      POSTGRES_DB: postgres
  #      POSTGRES_USER: postgres
  #      POSTGRES_PASSWORD: postgres
  #    healthcheck:
  #      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
  #      interval: 10s
  #      timeout: 5s
  #      retries: 5
  #
  #  # Storage (for image uploads)
  #  minio:
  #    image: minio/minio
  #    restart: unless-stopped
  #    command: server /data
  #    ports:
  #      - "9000:9000"
  #    volumes:
  #      - minio_data:/data
  #    environment:
  #      MINIO_ROOT_USER: minioadmin
  #      MINIO_ROOT_PASSWORD: minioadmin
  #
  #  # Chrome Browser (for printing and previews)
  #  chrome:
  #    image: ghcr.io/browserless/chromium:latest
  #    restart: unless-stopped
  #    environment:
  #      TIMEOUT: 10000
  #      CONCURRENT: 10
  #      TOKEN: chrome_token
  #      EXIT_ON_HEALTH_FAILURE: true
  #      PRE_REQUEST_HEALTH_CHECK: true

  app:
    image: wangx0111/reactive-resume:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
      #    depends_on:
      #      - postgres
      #      - minio
      #      - chrome
    environment:
      # -- Environment Variables --
      PORT: 3000
      NODE_ENV: production

      # -- URLs --
      PUBLIC_URL: http://124.221.142.46:3000
      STORAGE_URL: http://124.221.142.46:9004/default

      # -- Printer (Chrome) --
      CHROME_TOKEN: a64dee6bab4a17c
      CHROME_URL: http://10.0.12.13:3010

      # -- Database (Postgres) --
      DATABASE_URL: postgresql://resume:resume1234@10.0.12.13:5432/
      REDIS_URL: redis://:redis1234@10.0.12.13:6379
      # -- Auth --
      ACCESS_TOKEN_SECRET:  240f800d2863a5b
      REFRESH_TOKEN_SECRET:  242c10b146db04b

      # -- Emails --
      MAIL_FROM: noreply@localhost
      # SMTP_URL: smtp://user:pass@smtp:587 # Optional

      # -- Storage (Minio) --
      STORAGE_ENDPOINT: 10.0.12.13
      STORAGE_PORT: 9004
      STORAGE_REGION: cn-east-1 # Optional
      STORAGE_BUCKET: default
      STORAGE_ACCESS_KEY: 8c93c8d4bb5e7c3
      STORAGE_SECRET_KEY: e5d7c685ac45ee4
      STORAGE_USE_SSL: false
      STORAGE_SKIP_BUCKET_CHECK: false

      # -- Crowdin (Optional) --
      # CROWDIN_PROJECT_ID:
      # CROWDIN_PERSONAL_TOKEN:

      # -- Email (Optional) --
      # DISABLE_SIGNUPS: false
      # DISABLE_EMAIL_AUTH: false

      # -- GitHub (Optional) --
      # GITHUB_CLIENT_ID: github_client_id
      # GITHUB_CLIENT_SECRET: github_client_secret
      # GITHUB_CALLBACK_URL: http://localhost:3000/api/auth/github/callback

      # -- Google (Optional) --
      # GOOGLE_CLIENT_ID: google_client_id
      # GOOGLE_CLIENT_SECRET: google_client_secret
      # GOOGLE_CALLBACK_URL: http://localhost:3000/api/auth/google/callback

